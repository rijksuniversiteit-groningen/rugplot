% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rug_violin.R
\name{rug_violin}
\alias{rug_violin}
\title{Violin plots}
\usage{
rug_violin(lp)
}
\arguments{
\item{lp}{a list of parameters created from a JSON file}
}
\value{
A ggplot object and might save the violin plot in a file.
}
\description{
\code{rug_violin} is a reusable function that saves violin plots in different file formats (image, pdf, interactive html).
}
\details{
One of the best ways to run \code{rug_violin} is as follows:
\enumerate{
\item Create a JSON parameters file using the \code{create_json} function.
\item Open the JSON file and fill in the required parameters.
      \itemize{
          \item Required parameters are in angle brackets.
          \item For details of the parameters run \code{rutils::display_schema("violin_schema.json")}.
          \item Customize the rest of the pairs as needed.
          \item A file name is automatically generated, If no output file name is provided.
      }
\item Create and validate the list \code{lp} using  \code{validate_json_file} function.
\item Just in case, validate your JSON parameters file against the violin schema using the \code{validate_parameters} function.
\item Run the \code{rug_violin} function.
}
}
\examples{
# Assuming that your data file is 'iris.csv'
\dontrun{
# Step 1
create_json("violin_schema.json")
# By default "violin_params.json" will be generated in the current directory.

# Step 2
# Open "violin_params.json" in your favorite editor, replace and save the following
# "<filename path>" by "iris.csv"
# "<Y required column name>" by "sepal_length", make sure the column name is correct
# and replace '"x_variable": null' to '"X_variable": "species"'

# Step 3
lp <- rutils::validate_json_file("violin_params.json")

# Step 4
rutils::validate_parameters("violin_params.json","violin_schema.json")

# Step 5
rug_violin(lp)
# As a result, a similar 'iris.csv-violin-220118_121703.213.pdf' file will be created
}

}
